{"version":3,"sources":["webpack://hongsen/./src/components/Collection.js","webpack://hongsen/./src/components/Header.js","webpack://hongsen/./src/pages/travel.js"],"names":["albums","className","map","frontmatter","slug","title","hero","Link","to","key","G","image","getImage","alt","subtitle","description","dangerouslySetInnerHTML","__html","data","allMarkdownRemark","nodes","metaImage","length","childImageSharp","original","undefined"],"mappings":"yIAqCA,IA9BmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAClB,OACI,uBAAKC,UAAU,sBACVD,EAAOE,KAAI,YAAsB,IAAnBC,EAAkB,EAAlBA,YAAkB,mBACMA,GAA3BC,EADqB,EACrBA,KAAMC,EADe,EACfA,MAAOC,EADQ,EACRA,KACrB,OACI,gBAAC,EAAAC,KAAD,CAAMC,GAAIJ,EAAMK,IAAKL,EAAMH,UAAU,mBACjC,gBAAC,EAAAS,EAAD,CAAaC,OAAOC,OAASN,GAAOO,IAAKR,EAAOJ,UAAU,qBAC1D,uBAAKA,UAAU,0BACX,sBAAIA,UAAU,qBAAqBI,W,gDCK/D,IAhBe,SAAC,GAAD,IAAGA,EAAH,EAAGA,MAAOS,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,YAApB,OACX,uBAAKd,UAAU,kBACX,0BAAQA,UAAU,gBACd,0BAAKI,GACL,sBAAIJ,UAAU,mBAAmBa,IAErC,uBAAKb,UAAU,qBAAqBe,wBAAyB,CAAEC,OAAQF,Q,+FCsB/E,UAzBmB,SAAC,GAAc,IACxBf,EADuB,EAAXkB,KACEC,kBAAkBC,MAChCL,EAAc,mEAIdM,EAAYrB,EAAOsB,OAAStB,EAAO,GAAGG,YAAYG,KAAKiB,gBAAgBC,cAAWC,EAExF,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAKpB,MAAO,SAAUU,YAAaA,EAAaJ,MAAOU,KAPzC,EASd,gBAAC,IAAD,CAAYrB,OAAQA","file":"component---src-pages-travel-js-12930d377c3cede0aca0.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../styles/components/collection.scss';\r\n\r\nconst Collection = ({ albums }) => {\r\n    return (\r\n        <div className=\"collection-wrapper\">\r\n            {albums.map(({ frontmatter }) => {\r\n                const { slug, title, hero } = { ...frontmatter };\r\n                return (\r\n                    <Link to={slug} key={slug} className=\"collection-link\">\r\n                        <GatsbyImage image={getImage(hero)} alt={title} className=\"collection-image\" />\r\n                        <div className=\"collection-description\">\r\n                            <h2 className=\"collection-header\">{title}</h2>\r\n                        </div>\r\n                    </Link>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nCollection.propTypes = {\r\n    albums: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n                slug: PropTypes.string.isRequired,\r\n                title: PropTypes.string.isRequired,\r\n                hero: PropTypes.object.isRequired,\r\n            }),\r\n        }).isRequired,\r\n    ).isRequired,\r\n};\r\n\r\nexport default Collection;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../styles/components/header.scss';\r\n\r\nconst Header = ({ title, subtitle, description }) => (\r\n    <div className=\"header-wrapper\">\r\n        <header className=\"header-title\">\r\n            <h1>{title}</h1>\r\n            <h3 className=\"header-subtitle\">{subtitle}</h3>\r\n        </header>\r\n        <div className=\"header-description\" dangerouslySetInnerHTML={{ __html: description }} />\r\n    </div>\r\n);\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    subtitle: PropTypes.string.isRequired,\r\n    description: PropTypes.string,\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport Collection from '../components/Collection';\r\nimport Container from '../components/Container';\r\nimport Header from '../components/Header';\r\nimport Seo from '../components/SEO';\r\n\r\nconst travelPage = ({ data }) => {\r\n    const albums = data.allMarkdownRemark.nodes;\r\n    const description = \"A collection of travel photos from my trips from over the years.\";\r\n    const displayHeader = false;\r\n\r\n    // Set metaImage to most recent collection.\r\n    const metaImage = albums.length ? albums[0].frontmatter.hero.childImageSharp.original : undefined;\r\n\r\n    return (\r\n        <Container>\r\n            <Seo title={'Travel'} description={description} image={metaImage} />\r\n            {displayHeader && <Header title={'Travel'} subtitle={'Collection'} description={description} />}\r\n            <Collection albums={albums} />\r\n        </Container>\r\n    );\r\n};\r\n\r\ntravelPage.propTypes = {\r\n    data: PropTypes.shape({\r\n        allMarkdownRemark: PropTypes.shape({\r\n            nodes: PropTypes.arrayOf(PropTypes.object),\r\n        }),\r\n    }),\r\n};\r\n\r\nexport default travelPage;\r\n\r\nexport const pageQuery = graphql`\r\n        query {\r\n            allMarkdownRemark(\r\n                filter: {frontmatter: {type: {eq: \"travel\"}}}\r\n                sort: {fields: frontmatter___order, order: ASC}\r\n            ) {\r\n                nodes {\r\n                    frontmatter {\r\n                        slug\r\n                        title\r\n                        subtitle\r\n                        date(formatString: \"YYYY-MM\")\r\n                        order\r\n                        hero {\r\n                            id\r\n                            childImageSharp {\r\n                                ...ImageFragment_2\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `"],"sourceRoot":""}