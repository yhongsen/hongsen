{"version":3,"file":"component---src-pages-travel-js-9e454206b27aaf476d0c.js","mappings":"8HA0CA,IApCeA,IAAA,IAAC,MAAEC,EAAK,SAAEC,EAAQ,YAAEC,EAAW,SAAEC,GAASJ,EAAA,OACjDK,EAAAA,cAAA,OAAKC,UAAU,kBACXD,EAAAA,cAAA,UAAQC,UAAU,gBACdD,EAAAA,cAAA,UAAKJ,GACLI,EAAAA,cAAA,MAAIC,UAAU,mBAAmBJ,IAErCG,EAAAA,cAAA,OAAKC,UAAU,qBAAqBC,wBAAyB,CAAEC,OAAQL,KAGnEC,EAASK,OAAS,GACdJ,EAAAA,cAAA,WACIA,EAAAA,cAAA,MAAIC,UAAU,mBAAkB,kBAC/BF,EAASM,IAAI,CAACC,EAAOC,IAEdP,EAAAA,cAACQ,EAAAA,KAAI,CACDC,GAAIH,EAAMI,KACVT,UAAU,2BACVU,gBAAgB,qBAChBC,IAAKL,GAEJD,EAAMV,U,wDCW3C,IA9BmBD,IAAiB,IAAhB,OAAEkB,GAAQlB,EAC1B,OACIK,EAAAA,cAAA,OAAKC,UAAU,sBACVY,EAAOR,IAAIS,IAA8B,IAA7B,YAAEC,EAAW,OAAEC,GAAQF,EAChC,MAAM,MAAElB,EAAK,KAAEqB,GAAS,IAAKF,IACvB,KAAEL,GAAS,IAAKM,GACtB,OACIhB,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAIC,EAAME,IAAKF,EAAMT,UAAU,mBACjCD,EAAAA,cAACkB,EAAAA,EAAW,CAACC,OAAOC,EAAAA,EAAAA,GAASH,GAAOI,IAAKzB,EAAOK,UAAU,qBAC1DD,EAAAA,cAAA,OAAKC,UAAU,0BACXD,EAAAA,cAAA,MAAIC,UAAU,qBAAqBL,Q,mFCiB/D,UAzBmBD,IAAe,IAAd,KAAE2B,GAAM3B,EACxB,MAAMkB,EAASS,EAAKC,kBAAkBC,MAChC1B,EAAc,mEAId2B,EAAYZ,EAAOT,OAASS,EAAO,GAAGE,YAAYE,KAAKS,gBAAgBC,cAAWC,EAExF,OACI5B,EAAAA,cAAC6B,EAAAA,EAAS,KACN7B,EAAAA,cAAC8B,EAAAA,EAAG,CAAClC,MAAO,SAAUE,YAAaA,EAAaqB,MAAOM,KAPzC,EASdzB,EAAAA,cAAC+B,EAAAA,EAAU,CAAClB,OAAQA,K","sources":["webpack://hongsen/./src/components/Header.js","webpack://hongsen/./src/components/Collection.js","webpack://hongsen/./src/pages/travel.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../styles/components/header.scss';\r\nimport { Link } from 'gatsby';\r\n\r\nconst Header = ({ title, subtitle, description, subAlbum}) => (\r\n        <div className=\"header-wrapper\">\r\n            <header className=\"header-title\">\r\n                <h1>{title}</h1>\r\n                <h3 className=\"header-subtitle\">{subtitle}</h3>\r\n            </header>\r\n            <div className=\"header-description\" dangerouslySetInnerHTML={{ __html: description }} />           \r\n            {\r\n                // Render sub-albums\r\n                subAlbum.length > 0 && (\r\n                    <div>\r\n                        <h4 className=\"header-subalbum\">Related Albums</h4>\r\n                        {subAlbum.map((album, idx) => {\r\n                            return (\r\n                                <Link\r\n                                    to={album.slug}\r\n                                    className=\"navigation-subalbum-link\"\r\n                                    activeClassName=\"navigation__active\"\r\n                                    key={idx}\r\n                                >\r\n                                    {album.title}\r\n                                </Link>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n);\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    subtitle: PropTypes.string.isRequired,\r\n    description: PropTypes.string,\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../styles/components/collection.scss';\r\n\r\nconst Collection = ({ albums }) => {\r\n    return (\r\n        <div className=\"collection-wrapper\">\r\n            {albums.map(({ frontmatter, fields }) => {\r\n                const { title, hero } = { ...frontmatter };\r\n                const { slug } = { ...fields }\r\n                return (\r\n                    <Link to={slug} key={slug} className=\"collection-link\">\r\n                        <GatsbyImage image={getImage(hero)} alt={title} className=\"collection-image\" />\r\n                        <div className=\"collection-description\">\r\n                            <h2 className=\"collection-header\">{title}</h2>\r\n                        </div>\r\n                    </Link>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nCollection.propTypes = {\r\n    albums: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n                title: PropTypes.string.isRequired,\r\n                hero: PropTypes.object.isRequired,\r\n            }),\r\n        }).isRequired,\r\n    ).isRequired,\r\n};\r\n\r\nexport default Collection;","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Collection from '../components/Collection';\r\nimport Container from '../components/Container';\r\nimport Header from '../components/Header';\r\nimport Seo from '../components/SEO';\r\n\r\nconst travelPage = ({ data }) => {\r\n    const albums = data.allMarkdownRemark.nodes;\r\n    const description = \"A collection of travel photos from my trips from over the years.\";\r\n    const displayHeader = false;\r\n\r\n    // Set metaImage to most recent collection.\r\n    const metaImage = albums.length ? albums[0].frontmatter.hero.childImageSharp.original : undefined;\r\n\r\n    return (\r\n        <Container>\r\n            <Seo title={'Travel'} description={description} image={metaImage} />\r\n            {displayHeader && <Header title={'Travel'} subtitle={'Collection'} description={description} />}\r\n            <Collection albums={albums} />\r\n        </Container>\r\n    );\r\n};\r\n\r\ntravelPage.propTypes = {\r\n    data: PropTypes.shape({\r\n        allMarkdownRemark: PropTypes.shape({\r\n            nodes: PropTypes.arrayOf(PropTypes.object),\r\n        }),\r\n    }),\r\n};\r\n\r\nexport default travelPage;\r\n\r\nexport const pageQuery = graphql`\r\n        query {\r\n            allMarkdownRemark(\r\n                filter: {fields: {type: {eq: \"travel\"}, isSubAlbum: {eq: false}}}\r\n                sort: {fields: frontmatter___order, order: ASC}\r\n            ) {\r\n                nodes {\r\n                    fields {\r\n                        slug\r\n                    }\r\n                    frontmatter {\r\n                        title\r\n                        subtitle\r\n                        date(formatString: \"YYYY-MM\")\r\n                        order\r\n                        hero {\r\n                            id\r\n                            childImageSharp {\r\n                                ...ImageFragment_2\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `"],"names":["_ref","title","subtitle","description","subAlbum","React","className","dangerouslySetInnerHTML","__html","length","map","album","idx","Link","to","slug","activeClassName","key","albums","_ref2","frontmatter","fields","hero","GatsbyImage","image","getImage","alt","data","allMarkdownRemark","nodes","metaImage","childImageSharp","original","undefined","Container","Seo","Collection"],"sourceRoot":""}